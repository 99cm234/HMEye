@using System.ComponentModel.DataAnnotations

<MudDialog @bind-Visible="Visible" Options="Options" Class="bordered-dialog">
    <TitleContent>
        <MudText Typo="Typo.h6">Update Profile for @Model.Username</MudText>
    </TitleContent>
    <DialogContent>
        <EditForm EditContext="EditContext" OnValidSubmit="OnValidSubmit" FormName="update-profile">
            <DataAnnotationsValidator />
            @if (EditContext.GetValidationMessages().Any())
            {
                <MudAlert Severity="Severity.Error" Class="mt-2">
                    <ValidationSummary />
                </MudAlert>
            }
            @if (Errors.Any())
            {
                <MudAlert Severity="Severity.Error" Class="mt-2">
                    @foreach (var error in Errors)
                    {
                        <MudText>@error</MudText>
                    }
                </MudAlert>
            }
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Model.Email" Variant="Variant.Outlined" Label="Email" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Model.PhoneNumber" Variant="Variant.Outlined" Label="Phone Number" />
                </MudItem>
                <MudItem xs="12">
                    <MudStack Row Class="mb-4">
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" FullWidth>Save</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="OnCancel" FullWidth>Cancel</MudButton>
                    </MudStack>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback<bool> VisibleChanged { get; set; }
    [Parameter] public DialogOptions Options { get; set; } = new();
    [Parameter] public UpdateProfileModel Model { get; set; } = new();
    [Parameter] public EditContext EditContext { get; set; } = null!;
    [Parameter] public List<string> Errors { get; set; } = new();
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    public class UpdateProfileModel
    {
        public string Username { get; set; } = string.Empty;
        [EmailAddress] public string? Email { get; set; }
        [Phone] public string? PhoneNumber { get; set; }
    }
}