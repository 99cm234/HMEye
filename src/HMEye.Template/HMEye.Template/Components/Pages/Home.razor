@page "/"
@attribute [Authorize]
@using HMEye.TwincatServices;
@using System.Runtime.InteropServices
@inject IPlcDataCache DataCache;
@inject ISnackbar Snackbar;
@inject IPlcService PlcService;

<PageTitle>Home</PageTitle>
<MudText Typo="Typo.body1">@_currentDT</MudText>
<MudButton OnClick="ReadDT" Variant=Variant.Filled Color="Color.Secondary">Read DateTime</MudButton>
<MudButton OnClick="Start" Variant="Variant.Filled" Color="Color.Primary">Start</MudButton>
<MudButton OnClick="Stop" Variant="Variant.Filled" Color="Color.Tertiary">Stop</MudButton>
<MudButton OnClick="ReadStruct" Variant="Variant.Filled" Color="Color.Secondary">Read Struct</MudButton>

@if (_dataPoints != null && _dataPoints.Any())
{
    <MudTable Items="_dataPoints" Elevation="1" Hover="true">
        <HeaderContent>
            <MudTh>TimeStamp</MudTh>
            <MudTh>Value</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.DateTime</MudTd>
            <MudTd>@context.Value</MudTd>
        </RowTemplate>
    </MudTable>
}

<MudButton OnClick="ReadIntArray" Variant="Variant.Filled" Color="Color.Secondary">Read Int Array</MudButton>
@if (_intArray is not null && _intArray.Any())
{
    <MudTable Items="_intArray" Elevation="1" Hover="true">
        <HeaderContent>
            <MudTh>Int Array Values</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private DoubleDataPoint[]? _dataPoints = new DoubleDataPoint[10];
    private IEnumerable<short>? _intArray = [];
    private DateTime _currentDT;

    private void ReadDT()
    {
        var dtResult = DataCache.TryReadCached<DateTime>("MAIN.fbScheduler.CurrentDT");
        if (!dtResult.Error)
        {
            _currentDT = dtResult.Value;
        }
        else
        {
            Snackbar.Add(dtResult.ErrorMessage, Severity.Error);
        }
    }

    private void ReadStruct()
    {
        var activityResult = DataCache.TryReadCached<bool>("MAIN._activity");
        if (!activityResult.Error)
        {
            //
        }

        var bufferResult = DataCache.TryReadCached<DoubleDataPoint[]>("MAIN._buffer");
        if (!bufferResult.Error)
        {
            _dataPoints = bufferResult.Value;

        }
        else
        {
            Snackbar.Add(bufferResult.ErrorMessage, Severity.Error);
        }
    }

    private void ReadIntArray()
    {
        var result = DataCache.TryReadCached<short[]>("MAIN._intBuffer");
        if (!result.Error)
        {
            _intArray = result.Value;
        }
        else
        {
            Snackbar.Add(result.ErrorMessage, Severity.Error);
        }
    }
    private void Start()
    {
        DataCache.WriteQueue("MAIN._start", true);
    }
    private void Stop()
    {
        DataCache.WriteQueue("MAIN._stop", true);
    }

}
