// <auto-generated />
using HMEye.DumbTs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMEye.DumbTs.Migrations
{
    [DbContext(typeof(DumbTsDbContext))]
    [Migration("20250721124846_InitialDumbTs")]
    partial class InitialDumbTs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("HMEye.DumbTs.BooleanDataPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("Timestamp")
                        .HasColumnType("timestamp");

                    b.Property<bool>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SeriesName", "Timestamp")
                        .IsDescending(false, true);

                    b.ToTable("BooleanDataPoints");
                });

            modelBuilder.Entity("HMEye.DumbTs.NumericDataPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("Timestamp")
                        .HasColumnType("timestamp");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("decimal(28,8)");

                    b.HasKey("Id");

                    b.HasIndex("SeriesName", "Timestamp")
                        .IsDescending(false, true);

                    b.ToTable("NumericDataPoints");
                });

            modelBuilder.Entity("HMEye.DumbTs.TextDataPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("Timestamp")
                        .HasColumnType("timestamp");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SeriesName", "Timestamp")
                        .IsDescending(false, true);

                    b.ToTable("TextDataPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
